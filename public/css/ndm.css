@charset "UTF-8";
/*
 * Base SCSS stylesheet for the Manuscript Verse Miscellanies
 * Database.
 *
 * @author: Joey Takeda (DHIL)
 * @date: 2020
 */
/**
* Namespaces
*
**/
/**
* Imports
*
* Note that it's necessary to call the mixins _scss first. When we do put this into production,
* we'll have a yarn package for the DHIL mixins that we can download using yarn.
**/
/* Mixins file, which we should try and use globally across DHIL projects,
since there's stuff I tend to do quite a bit.
 */
/* Make sure to import the modularscale-sass library */
/* DEFAULTS */
/* @dhil-headers
 *
 * Standard header creation from a typescale
 */
/* @dhil-reset
 *
 * Adds a number of resets that are common across the dhil
 */
/* @dhil-make-navbar
 *
 * Resets and customizes the navbar
 */
/* @dhil-gallery
 *
 * Creates a standard gallery view (note that we used to do this with flex,
 * but grid is much better for handling variable numbers of objects)
 */
/* @dhil-clamp-lines
 *
 * Clamps lines at a particular vertical line length with a fallback for unsupported
 * browsers.
 */
/* @dhil-lazyload
 *
 * Basic adjustments for images that are loaded lazily.
 *
 */
/* Note to be called directly, but just to reset everything */
/* 'Nunito Sans' normal 200*/
@font-face {
  font-family: "Nunito Sans";
  font-style: normal;
  font-weight: 200;
  src: local("Nunito Sans ExtraLight"), local("NunitoSans-ExtraLight"), url("/digital-mary/public/fonts/NunitoSans-ExtraLight-200.woff2") format("woff2"), url("/digital-mary/public/fonts/NunitoSans-ExtraLight-200.woff") format("woff");
}
/* 'Nunito Sans' normal 300*/
@font-face {
  font-family: "Nunito Sans";
  font-style: normal;
  font-weight: 300;
  src: local("Nunito Sans Light"), local("NunitoSans-Light"), url("/digital-mary/public/fonts/NunitoSans-Light-300.woff2") format("woff2"), url("/digital-mary/public/fonts/NunitoSans-Light-300.woff") format("woff");
}
/* 'Nunito Sans' italic 200*/
@font-face {
  font-family: "Nunito Sans";
  font-style: italic;
  font-weight: 200;
  src: local("Nunito Sans ExtraLight Italic"), local("NunitoSans-ExtraLightItalic"), url("/digital-mary/public/fonts/NunitoSans-ExtraLightItalic-200.woff2") format("woff2"), url("/digital-mary/public/fonts/NunitoSans-ExtraLightItalic-200.woff") format("woff");
}
/* 'Nunito Sans' italic 300*/
@font-face {
  font-family: "Nunito Sans";
  font-style: italic;
  font-weight: 300;
  src: local("Nunito Sans Light Italic"), local("NunitoSans-LightItalic"), url("/digital-mary/public/fonts/NunitoSans-LightItalic-300.woff2") format("woff2"), url("/digital-mary/public/fonts/NunitoSans-LightItalic-300.woff") format("woff");
}
/* 'Nunito Sans' normal 400*/
@font-face {
  font-family: "Nunito Sans";
  font-style: normal;
  font-weight: 400;
  src: local("Nunito Sans Regular"), local("NunitoSans-Regular"), url("/digital-mary/public/fonts/NunitoSans-Regular-400.woff2") format("woff2"), url("/digital-mary/public/fonts/NunitoSans-Regular-400.woff") format("woff");
}
/* 'Nunito Sans' italic 400*/
@font-face {
  font-family: "Nunito Sans";
  font-style: italic;
  font-weight: 400;
  src: local("Nunito Sans Italic"), local("NunitoSans-Italic"), url("/digital-mary/public/fonts/NunitoSans-Italic-400.woff2") format("woff2"), url("/digital-mary/public/fonts/NunitoSans-Italic-400.woff") format("woff");
}
/* 'Nunito Sans' normal 700*/
@font-face {
  font-family: "Nunito Sans";
  font-style: normal;
  font-weight: 700;
  src: local("Nunito Sans Bold"), local("NunitoSans-Bold"), url("/digital-mary/public/fonts/NunitoSans-Bold-700.woff2") format("woff2"), url("/digital-mary/public/fonts/NunitoSans-Bold-700.woff") format("woff");
}
/* 'Nunito Sans' italic 700*/
@font-face {
  font-family: "Nunito Sans";
  font-style: italic;
  font-weight: 700;
  src: local("Nunito Sans Bold Italic"), local("NunitoSans-BoldItalic"), url("/digital-mary/public/fonts/NunitoSans-BoldItalic-700.woff2") format("woff2"), url("/digital-mary/public/fonts/NunitoSans-BoldItalic-700.woff") format("woff");
}
/* 'Nunito Sans' normal 800*/
@font-face {
  font-family: "Nunito Sans";
  font-style: normal;
  font-weight: 800;
  src: local("Nunito Sans ExtraBold"), local("NunitoSans-ExtraBold"), url("/digital-mary/public/fonts/NunitoSans-ExtraBold-800.woff2") format("woff2"), url("/digital-mary/public/fonts/NunitoSans-ExtraBold-800.woff") format("woff");
}
/* 'Nunito Sans' italic 800*/
@font-face {
  font-family: "Nunito Sans";
  font-style: italic;
  font-weight: 800;
  src: local("Nunito Sans ExtraBold Italic"), local("NunitoSans-ExtraBoldItalic"), url("/digital-mary/public/fonts/NunitoSans-ExtraBoldItalic-800.woff2") format("woff2"), url("/digital-mary/public/fonts/NunitoSans-ExtraBoldItalic-800.woff") format("woff");
}
/* 'Nunito Sans' normal 900*/
@font-face {
  font-family: "Nunito Sans";
  font-style: normal;
  font-weight: 900;
  src: local("Nunito Sans Black"), local("NunitoSans-Black"), url("/digital-mary/public/fonts/NunitoSans-Black-900.woff2") format("woff2"), url("/digital-mary/public/fonts/NunitoSans-Black-900.woff") format("woff");
}
/* 'Nunito Sans' italic 900*/
@font-face {
  font-family: "Nunito Sans";
  font-style: italic;
  font-weight: 900;
  src: local("Nunito Sans Black Italic"), local("NunitoSans-BlackItalic"), url("/digital-mary/public/fonts/NunitoSans-BlackItalic-900.woff2") format("woff2"), url("/digital-mary/public/fonts/NunitoSans-BlackItalic-900.woff") format("woff");
}
/* 'Crimson Text' normal 400*/
@font-face {
  font-family: "Crimson Text";
  font-style: normal;
  font-weight: 400;
  src: local("Crimson Text Regular"), local("CrimsonText-Regular"), url("/digital-mary/public/fonts/CrimsonText-Regular-400.woff2") format("woff2"), url("/digital-mary/public/fonts/CrimsonText-Regular-400.woff") format("woff");
}
/* 'Crimson Text' italic 400*/
@font-face {
  font-family: "Crimson Text";
  font-style: italic;
  font-weight: 400;
  src: local("Crimson Text Italic"), local("CrimsonText-Italic"), url("/digital-mary/public/fonts/CrimsonText-Italic-400.woff2") format("woff2"), url("/digital-mary/public/fonts/CrimsonText-Italic-400.woff") format("woff");
}
/* 'Crimson Text' normal 600*/
@font-face {
  font-family: "Crimson Text";
  font-style: normal;
  font-weight: 600;
  src: local("Crimson Text SemiBold"), local("CrimsonText-SemiBold"), url("/digital-mary/public/fonts/CrimsonText-SemiBold-600.woff2") format("woff2"), url("/digital-mary/public/fonts/CrimsonText-SemiBold-600.woff") format("woff");
}
/* 'Crimson Text' italic 600*/
@font-face {
  font-family: "Crimson Text";
  font-style: italic;
  font-weight: 600;
  src: local("Crimson Text SemiBold Italic"), local("CrimsonText-SemiBoldItalic"), url("/digital-mary/public/fonts/CrimsonText-SemiBoldItalic-600.woff2") format("woff2"), url("/digital-mary/public/fonts/CrimsonText-SemiBoldItalic-600.woff") format("woff");
}
/* 'Crimson Text' normal 700*/
@font-face {
  font-family: "Crimson Text";
  font-style: normal;
  font-weight: 700;
  src: local("Crimson Text Bold"), local("CrimsonText-Bold"), url("/digital-mary/public/fonts/CrimsonText-Bold-700.woff2") format("woff2"), url("/digital-mary/public/fonts/CrimsonText-Bold-700.woff") format("woff");
}
/* 'Crimson Text' italic 700*/
@font-face {
  font-family: "Crimson Text";
  font-style: italic;
  font-weight: 700;
  src: local("Crimson Text Bold Italic"), local("CrimsonText-BoldItalic"), url("/digital-mary/public/fonts/CrimsonText-BoldItalic-700.woff2") format("woff2"), url("/digital-mary/public/fonts/CrimsonText-BoldItalic-700.woff") format("woff");
}
/*Hamburger stuff */
/*Breadcrumb stuff */
/*!
 * Hamburgers
 * @description Tasty CSS-animated hamburgers
 * @author Jonathan Suh @jonsuh
 * @site https://jonsuh.com/hamburgers
 * @link https://github.com/jonsuh/hamburgers
 */
.hamburger {
  padding: 15px 15px;
  display: inline-block;
  cursor: pointer;
  transition-property: opacity, filter;
  transition-duration: 0.15s;
  transition-timing-function: linear;
  font: inherit;
  color: inherit;
  text-transform: none;
  background-color: transparent;
  border: 0;
  margin: 0;
  overflow: visible;
}
.hamburger:hover {
  opacity: 0.7;
}
.hamburger.is-active:hover {
  opacity: 0.7;
}
.hamburger.is-active .hamburger-inner,
.hamburger.is-active .hamburger-inner::before,
.hamburger.is-active .hamburger-inner::after {
  background-color: #ffffff;
}

.hamburger-box {
  width: 40px;
  height: 24.0384615385px;
  display: inline-block;
  position: relative;
}

.hamburger-inner {
  display: block;
  top: 50%;
  margin-top: -1.9230769231px;
}
.hamburger-inner, .hamburger-inner::before, .hamburger-inner::after {
  width: 40px;
  height: 3.8461538462px;
  background-color: #ffffff;
  border-radius: 4px;
  position: absolute;
  transition-property: transform;
  transition-duration: 0.15s;
  transition-timing-function: ease;
}
.hamburger-inner::before, .hamburger-inner::after {
  content: "";
  display: block;
}
.hamburger-inner::before {
  top: -10.0961538462px;
}
.hamburger-inner::after {
  bottom: -10.0961538462px;
}

/*
 * Collapse
 */
.hamburger--collapse .hamburger-inner {
  top: auto;
  bottom: 0;
  transition-duration: 0.13s;
  transition-delay: 0.13s;
  transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
}
.hamburger--collapse .hamburger-inner::after {
  top: -20.1923076923px;
  transition: top 0.2s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), opacity 0.1s linear;
}
.hamburger--collapse .hamburger-inner::before {
  transition: top 0.12s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19);
}
.hamburger--collapse.is-active .hamburger-inner {
  transform: translate3d(0, -10.0961538462px, 0) rotate(-45deg);
  transition-delay: 0.22s;
  transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
}
.hamburger--collapse.is-active .hamburger-inner::after {
  top: 0;
  opacity: 0;
  transition: top 0.2s cubic-bezier(0.33333, 0, 0.66667, 0.33333), opacity 0.1s 0.22s linear;
}
.hamburger--collapse.is-active .hamburger-inner::before {
  top: 0;
  transform: rotate(-90deg);
  transition: top 0.1s 0.16s cubic-bezier(0.33333, 0, 0.66667, 0.33333), transform 0.13s 0.25s cubic-bezier(0.215, 0.61, 0.355, 1);
}

h1 {
  /* It'd be nice to use scss:max() here, but
  PHP storm raises an erroneously raises an error.
   */
  font-size: 2.6180340252rem;
  font-family: "Crimson Text";
}
h1 > a {
  line-height: 1.4;
}

h2 {
  /* It'd be nice to use scss:max() here, but
  PHP storm raises an erroneously raises an error.
   */
  font-size: 1.618034rem;
  font-family: "Crimson Text";
}
h2 > a {
  line-height: 1.4;
}

h3 {
  /* It'd be nice to use scss:max() here, but
  PHP storm raises an erroneously raises an error.
   */
  font-size: 1rem;
  font-family: "Crimson Text";
}
h3 > a {
  line-height: 1.4;
}

h4 {
  /* It'd be nice to use scss:max() here, but
  PHP storm raises an erroneously raises an error.
   */
  font-size: 1rem;
  font-family: "Crimson Text";
}
h4 > a {
  line-height: 1.4;
}

h5 {
  /* It'd be nice to use scss:max() here, but
  PHP storm raises an erroneously raises an error.
   */
  font-size: 1rem;
  font-family: "Crimson Text";
}
h5 > a {
  line-height: 1.4;
}

html, body {
  font-size: 16px;
  line-height: 1.6;
}

/*Always hide x overflow */
body {
  overflow-x: hidden;
}

main {
  min-height: calc(90vh - 50px);
}

* {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility;
  line-height: 1.6;
}

html, body, .dropdown-menu {
  font-family: "Nunito Sans";
}

.navbar-default {
  min-height: 50px;
  /* Change the width to 100vw rather than 100%, since 100% causes
     jump behaviour when overflow-y on the body is set to hidden
   */
  width: 100vw;
  padding-right: 10px;
  /* Set the background colour */
  background: #C0B283;
  text-transform: uppercase;
  /* Have to add the min-width hiding again */
  /* Reset the fixed-top to be sticky rather than fixed,
     so to avoid the problem with fixed position things overlapping
   */
  /* Switch the text colour */
}
.navbar-default .navbar-nav > li > a:hover {
  color: #ffffff;
}
@media (min-width: 768px) {
  .navbar-default .navbar-toggle {
    display: none;
  }
}
.navbar-default.navbar-fixed-top {
  position: sticky !important;
}
.navbar-default .navbar-header {
  margin-left: 0;
  margin-right: 0;
}
.navbar-default .navbar-nav > li > a {
  color: #ffffff;
}

.body-nav {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  margin-top: 0;
  margin-bottom: 0.3819660059rem;
  align-items: end;
}
.body-nav > * {
  margin-bottom: 0.6180339845rem;
}
.body-nav .btn-toolbar {
  margin-top: -1px;
}

.breadcrumbs {
  list-style: none;
  overflow: hidden;
  padding: 0;
  display: flex;
  width: -webkit-max-content;
  width: -moz-max-content;
  width: max-content;
  font-weight: 300;
  font-size: 12px;
  box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.05);
}

.breadcrumbs li > * {
  text-decoration: none;
  position: relative;
  display: flex;
  height: 100%;
  align-items: center;
  color: black;
  padding: 0.5em 0 0.5em 4em;
}

/*
* Now create the various triangles
* that will overlap; this is the
* common stuff between the two
* triangles
*/
.breadcrumbs li > *:before,
.breadcrumbs li > *:after {
  content: " ";
  display: block;
  width: 0;
  height: 0;
  border-top: 50px solid transparent;
  border-bottom: 50px solid transparent;
  position: absolute;
  top: 50%;
  margin-top: -50px;
  left: 100%;
  border-left-width: 30px;
  border-left-style: solid;
}

.breadcrumbs li:not(:last-child) > *:before {
  /*And make sure the zindex is 1*/
  z-index: 1;
  /*This should be the colour
  you want the arrow*/
  border-left-color: #E7DED1;
  /*The margin left here dictates the width of the arrow*/
  margin-left: 2px;
}

.breadcrumbs li > *:after {
  /*Z index should be 2 to overlap*/
  z-index: 2;
  /*BORDER LEFT should be the
  same as the background colour*/
  border-left-color: white;
}

/*Now small, project specific
paddings etc*/
.breadcrumbs li:first-child > * {
  padding: 0 0 0 1rem;
}

.breadcrumbs li > *,
.breadcrumbs li > *:after,
.breadcrumbs li > *:before {
  transition: all 0.2s ease-in-out;
}

.breadcrumbs li:last-child {
  background: #E5E5E5;
}

.breadcrumbs li:not(:last-child) > *:hover {
  background: #E7DED1;
}
.breadcrumbs li:not(:last-child) > *:hover:after, .breadcrumbs li:not(:last-child) > *:hover:before {
  border-left-color: #E7DED1;
}

.breadcrumbs .current {
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow-x: hidden;
  margin: 0 1rem 0 0;
  font-style: italic;
  max-width: 25ch;
}
li > .breadcrumbs .current {
  color: rgba(0, 0, 0, 0.8);
}

.breadcrumbs li:last-child > *:after,
.breadcrumbs li:last-child > *:before {
  content: unset;
}

/* Media query to reset the size of things */
@media (max-width: 780px) {
  .current {
    max-width: 25ch;
  }
}
/**************************** Page Header */
.page-header {
  border-bottom: none;
  margin-top: 1rem;
}
.item_show .page-header {
  margin: 0;
  padding-bottom: 0;
}

@media (min-width: 768px) {
  .mobile-header {
    position: absolute;
    width: 1px;
    height: 1px;
    margin: -1px;
    padding: 0;
    overflow: hidden;
    clip: rect(1px, 1px, 1px, 1px);
    -webkit-clip-path: inset(50%);
    clip-path: inset(50%);
    border: 0;
    white-space: nowrap;
  }
}

@media (max-width: 768px) {
  .full-view-header {
    display: none;
  }
}

.item_show .content {
  display: grid;
  margin-top: 1.618034rem;
}
.item_show .content h1 {
  margin-top: 0;
  margin-bottom: 1.618034rem;
}
.item_show .content.imageless {
  grid-template-columns: auto !important;
  max-width: 45rem;
  margin-left: auto;
  margin-right: auto;
}
@media (min-width: 768px) {
  .item_show .content {
    grid-template-columns: 1fr 1fr;
    grid-column-gap: 2.6180340252rem;
  }
}
@media (max-width: 768px) {
  .item_show .content {
    grid-row-gap: 1.618034rem;
  }
  .item_show .content .images {
    grid-row: 1;
    border: 1px solid #E5E5E5;
    display: flex;
    padding: 1rem 0;
    width: 100%;
  }
}

.images {
  margin: 0 auto;
}
.images .img-content {
  top: 3.7430339845rem;
  position: sticky;
  margin: 0 auto;
}
@media (min-width: 768px) {
  .images .carousel {
    padding: 0.3819660059rem 0.6180339845rem 0.6180339845rem 0.6180339845rem;
    border: 1px solid #E5E5E5;
  }
}

.content a {
  text-decoration: none !important;
  border-bottom-style: solid;
  border-bottom-width: 0.2360679726rem;
  border-bottom-color: rgba(192, 178, 131, 0.5);
  transition: border-bottom-color 0.2s ease-in-out;
  color: inherit;
}
.content a:hover {
  color: inherit;
  border-bottom-color: rgba(192, 178, 131, 0.8);
}

.details .subjects ul {
  list-style-type: none;
  display: flex;
  color: red;
  flex-wrap: wrap;
  margin: 0;
  padding: 0;
  align-items: center;
}
.details .subjects ul > li {
  margin-top: 0.3819660059rem;
  margin-bottom: 0.3819660059rem;
  margin-right: 0.3819660059rem;
  transition: border-color 0.2s ease-in-out, background 0.2s ease-in-out, color 0.2s ease-in-out;
}
.details .subjects ul > li > a {
  padding: 0.3819660059rem 0.3819660059rem;
  display: inline-block;
  transition: border-color 0.2s ease-in-out, background 0.2s ease-in-out, color 0.2s ease-in-out;
}
.details .subjects ul > li > a:hover {
  text-decoration: none;
}
.details .subjects ul li {
  background: #E7DED1;
}
.details .subjects ul li:hover {
  background: #C0B283;
}
.details .subjects ul li:hover > a {
  color: white;
  border-color: #E7DED1;
}
.details .subjects ul li > a {
  margin: 0.3819660059rem;
  border: 2px solid white;
  color: black;
  padding: 0.3819660059rem 0.6180339845rem;
}

/* GALLERY STUFF */
.gallery {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  grid-column-gap: 1.618034rem;
  grid-row-gap: 1.618034rem;
}
.gallery > .item {
  grid-column: span 3;
}
@media (max-width: 991px) {
  .gallery > .item {
    grid-column: span 4;
  }
}
@media (max-width: 768px) {
  .gallery > .item {
    grid-column: span 6;
  }
}

.gallery .item {
  display: flex;
  flex-direction: column;
  text-align: center;
  margin-bottom: 1rem;
}
.gallery .item img {
  max-width: 100%;
}
.gallery .item > a {
  height: 100%;
  border: 1px solid rgba(231, 222, 209, 0.5);
  transition: border 0.2s ease-in-out;
  padding: 1rem;
  display: flex;
  flex-direction: column;
  text-decoration: none !important;
}
.gallery .item > a:hover {
  border-color: #C0B283;
}
.gallery .item > a > div {
  margin-top: auto;
}
.gallery .item > a > div:first-child {
  margin-bottom: auto;
  padding-bottom: 1rem;
}
.gallery .item > a > div.item-content-wrapper {
  border-top: 5px solid #efefef;
  border-top-style: outset;
}
.gallery .item h2 {
  width: 100%;
  padding: 1rem 0.6180339845rem;
  text-align: center;
  font-size: 1rem;
  font-family: "Nunito Sans";
  font-weight: 300;
  color: black;
  line-height: 1.4;
  text-align: left;
  margin-top: auto;
  margin-bottom: 0.6180339845rem;
}

.subject-item {
  margin-bottom: 1.618034rem;
}
.subject-item h2 {
  font-size: 2.0225425rem;
}

a.zoomable {
  cursor: zoom-in;
}
a.zoomable img {
  transform: scale(1);
}
a.zoomable:hover img {
  transform: scale(1.01);
}

dt {
  text-transform: lowercase;
  font-variant: small-caps;
  font-size: 1.618034rem;
  margin-bottom: 0.2360679726rem;
  font-weight: 500;
  letter-spacing: 2px;
}

dd {
  margin-bottom: 1.618034rem;
}

/* Carousel */
#carousel .carousel-inner {
  height: 100%;
}
#carousel .img-thumbnail {
  border: none;
}
#carousel .carousel-control {
  display: none;
}
#carousel .carousel-indicators li {
  border-color: #C0B283;
}
#carousel .carousel-indicators li.active {
  background-color: #C0B283;
}

/* Pagination */
.pagination {
  display: flex;
  justify-content: flex-end;
}
.pagination > li {
  border-radius: 0;
  border: none;
  float: none;
  color: black;
  background-color: inherit;
}
.pagination > li > a, .pagination > li > span {
  border-radius: 0;
  border: none;
  float: none;
  color: black;
  background-color: inherit;
}
.pagination > li > a:hover, .pagination > li > a:focus, .pagination > li > span:hover, .pagination > li > span:focus {
  border-radius: 0;
  border: none;
  float: none;
  color: black;
  background-color: inherit;
}
.pagination > li.active, .pagination > li:hover, .pagination > li:focus {
  border-radius: 0;
  border: none;
  float: none;
  color: black;
  background-color: inherit;
}
.pagination > li.active > a, .pagination > li.active > span, .pagination > li:hover > a, .pagination > li:hover > span, .pagination > li:focus > a, .pagination > li:focus > span {
  border-radius: 0;
  border: none;
  float: none;
  color: black;
  background-color: inherit;
}
.pagination > li.active > a:hover, .pagination > li.active > a:focus, .pagination > li.active > span:hover, .pagination > li.active > span:focus, .pagination > li:hover > a:hover, .pagination > li:hover > a:focus, .pagination > li:hover > span:hover, .pagination > li:hover > span:focus, .pagination > li:focus > a:hover, .pagination > li:focus > a:focus, .pagination > li:focus > span:hover, .pagination > li:focus > span:focus {
  border-radius: 0;
  border: none;
  float: none;
  color: black;
  background-color: inherit;
}
.pagination > li:not(:last-child) {
  border-right: 2px solid #efefef;
}

/* Footer */
footer {
  background: #F3F4F5;
  margin-top: 1.618034rem;
}
footer:before {
  content: " ";
  background-image: url("../images/footer.svg");
  height: 4.2360680659rem;
  overflow: hidden;
  display: block;
}
footer > div.container {
  position: relative;
}

/* Menu bar styling */
a.dropdown-toggle::after {
  content: "▾";
  padding-left: 0.3em;
  font-size: small;
}

/* Custom app styles */
label.required::after {
  content: " *";
  color: red;
  font-weight: bold;
}

a[href^="mailto:"]::after {
  content: "✉";
  position: relative;
  top: 1px;
  display: inline-block;
  padding-left: 0.5ex;
  font-family: "Glyphicons Halflings";
  font-style: normal;
  font-weight: 400;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

a[href^="http://"]::after,
a[href^="https://"]::after {
  content: "";
  position: relative;
  top: 1px;
  display: inline-block;
  padding-left: 0.5ex;
  font-family: "Glyphicons Halflings";
  font-style: normal;
  font-weight: 400;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

tbody tr th {
  width: 20%;
}

/*# sourceMappingURL=ndm.css.map */
